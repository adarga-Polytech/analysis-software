# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'batch-iv-analysis.ui'
#
# Created by: PyQt5 UI code generator 5.8
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_batch_iv_analysis(object):
    def setupUi(self, batch_iv_analysis):
        batch_iv_analysis.setObjectName("batch_iv_analysis")
        batch_iv_analysis.resize(1242, 588)
        self.centralwidget = QtWidgets.QWidget(batch_iv_analysis)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tehTabs = QtWidgets.QTabWidget(self.centralwidget)
        self.tehTabs.setObjectName("tehTabs")
        self.resultsTabs = QtWidgets.QWidget()
        self.resultsTabs.setObjectName("resultsTabs")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.resultsTabs)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.tableWidget = QtWidgets.QTableWidget(self.resultsTabs)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setRowCount(0)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(92)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setDefaultSectionSize(30)
        self.tableWidget.verticalHeader().setSortIndicatorShown(True)
        self.gridLayout_3.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.tehTabs.addTab(self.resultsTabs, "")
        self.plotTab = QtWidgets.QWidget()
        self.plotTab.setObjectName("plotTab")
        self.tehTabs.addTab(self.plotTab, "")
        self.settingsTab = QtWidgets.QWidget()
        self.settingsTab.setObjectName("settingsTab")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.settingsTab)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_2.setObjectName("formLayout_2")
        self.attemptCharEqnFitLabel = QtWidgets.QLabel(self.settingsTab)
        self.attemptCharEqnFitLabel.setObjectName("attemptCharEqnFitLabel")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.attemptCharEqnFitLabel)
        self.attemptCharEqnFitCheckBox = QtWidgets.QCheckBox(self.settingsTab)
        self.attemptCharEqnFitCheckBox.setChecked(True)
        self.attemptCharEqnFitCheckBox.setObjectName("attemptCharEqnFitCheckBox")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.attemptCharEqnFitCheckBox)
        self.doFastAndSloppyMathLabel = QtWidgets.QLabel(self.settingsTab)
        self.doFastAndSloppyMathLabel.setObjectName("doFastAndSloppyMathLabel")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.doFastAndSloppyMathLabel)
        self.doFastAndSloppyMathCheckBox = QtWidgets.QCheckBox(self.settingsTab)
        self.doFastAndSloppyMathCheckBox.setObjectName("doFastAndSloppyMathCheckBox")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.doFastAndSloppyMathCheckBox)
        self.lowerVoltageCutoffLabel = QtWidgets.QLabel(self.settingsTab)
        self.lowerVoltageCutoffLabel.setObjectName("lowerVoltageCutoffLabel")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lowerVoltageCutoffLabel)
        self.lowerVoltageCutoffLineEdit = QtWidgets.QLineEdit(self.settingsTab)
        self.lowerVoltageCutoffLineEdit.setObjectName("lowerVoltageCutoffLineEdit")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lowerVoltageCutoffLineEdit)
        self.upperVoltageCutoffLabel = QtWidgets.QLabel(self.settingsTab)
        self.upperVoltageCutoffLabel.setObjectName("upperVoltageCutoffLabel")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.upperVoltageCutoffLabel)
        self.upperVoltageCutoffLineEdit = QtWidgets.QLineEdit(self.settingsTab)
        self.upperVoltageCutoffLineEdit.setObjectName("upperVoltageCutoffLineEdit")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.upperVoltageCutoffLineEdit)
        self.horizontalLayout.addLayout(self.formLayout_2)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setObjectName("formLayout")
        self.horizontalLayout.addLayout(self.formLayout)
        self.tehTabs.addTab(self.settingsTab, "")
        self.gridLayout.addWidget(self.tehTabs, 0, 0, 1, 1)
        batch_iv_analysis.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(batch_iv_analysis)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1242, 28))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        batch_iv_analysis.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(batch_iv_analysis)
        self.statusbar.setEnabled(True)
        self.statusbar.setObjectName("statusbar")
        batch_iv_analysis.setStatusBar(self.statusbar)
        self.tehDock = QtWidgets.QDockWidget(batch_iv_analysis)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tehDock.sizePolicy().hasHeightForWidth())
        self.tehDock.setSizePolicy(sizePolicy)
        self.tehDock.setMinimumSize(QtCore.QSize(93, 118))
        self.tehDock.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.tehDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea|QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.tehDock.setObjectName("tehDock")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.eventLog = QtWidgets.QTextBrowser(self.dockWidgetContents)
        self.eventLog.setObjectName("eventLog")
        self.gridLayout_2.addWidget(self.eventLog, 0, 0, 1, 1)
        self.tehDock.setWidget(self.dockWidgetContents)
        batch_iv_analysis.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.tehDock)
        self.actionQuit = QtWidgets.QAction(batch_iv_analysis)
        self.actionQuit.setObjectName("actionQuit")
        self.actionOpen = QtWidgets.QAction(batch_iv_analysis)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(batch_iv_analysis)
        self.actionSave.setObjectName("actionSave")
        self.actionClear_Table = QtWidgets.QAction(batch_iv_analysis)
        self.actionClear_Table.setEnabled(True)
        self.actionClear_Table.setObjectName("actionClear_Table")
        self.actionFsadf = QtWidgets.QAction(batch_iv_analysis)
        self.actionFsadf.setObjectName("actionFsadf")
        self.actionSet_Bounds = QtWidgets.QAction(batch_iv_analysis)
        self.actionSet_Bounds.setObjectName("actionSet_Bounds")
        self.actionWatch = QtWidgets.QAction(batch_iv_analysis)
        self.actionWatch.setObjectName("actionWatch")
        self.actionEnable_Watching = QtWidgets.QAction(batch_iv_analysis)
        self.actionEnable_Watching.setCheckable(True)
        self.actionEnable_Watching.setChecked(False)
        self.actionEnable_Watching.setObjectName("actionEnable_Watching")
        self.actionWatch_2 = QtWidgets.QAction(batch_iv_analysis)
        self.actionWatch_2.setObjectName("actionWatch_2")
        self.actionFit_Constraints = QtWidgets.QAction(batch_iv_analysis)
        self.actionFit_Constraints.setObjectName("actionFit_Constraints")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionWatch_2)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuTools.addAction(self.actionClear_Table)
        self.menuTools.addAction(self.actionEnable_Watching)
        self.menuTools.addAction(self.actionFit_Constraints)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())

        self.retranslateUi(batch_iv_analysis)
        self.tehTabs.setCurrentIndex(0)
        self.actionQuit.triggered.connect(batch_iv_analysis.close)
        QtCore.QMetaObject.connectSlotsByName(batch_iv_analysis)

    def retranslateUi(self, batch_iv_analysis):
        _translate = QtCore.QCoreApplication.translate
        batch_iv_analysis.setWindowTitle(_translate("batch_iv_analysis", "batch-iv-analysis"))
        self.tableWidget.setSortingEnabled(True)
        self.tehTabs.setTabText(self.tehTabs.indexOf(self.resultsTabs), _translate("batch_iv_analysis", "Results"))
        self.tehTabs.setTabText(self.tehTabs.indexOf(self.plotTab), _translate("batch_iv_analysis", "Plots"))
        self.attemptCharEqnFitLabel.setText(_translate("batch_iv_analysis", "Attempt Char. Eqn. Fit"))
        self.doFastAndSloppyMathLabel.setText(_translate("batch_iv_analysis", "Do Fast and Sloppy Math"))
        self.lowerVoltageCutoffLabel.setToolTip(_translate("batch_iv_analysis", "<html><head/><body><p>Data below this voltage will be ignored</p></body></html>"))
        self.lowerVoltageCutoffLabel.setText(_translate("batch_iv_analysis", "Lower Voltage Cutoff"))
        self.lowerVoltageCutoffLineEdit.setText(_translate("batch_iv_analysis", "-inf"))
        self.upperVoltageCutoffLabel.setToolTip(_translate("batch_iv_analysis", "<html><head/><body><p>Data above this voltage will be ignored</p></body></html>"))
        self.upperVoltageCutoffLabel.setText(_translate("batch_iv_analysis", "Upper Voltage Cutoff"))
        self.upperVoltageCutoffLineEdit.setText(_translate("batch_iv_analysis", "inf"))
        self.tehTabs.setTabText(self.tehTabs.indexOf(self.settingsTab), _translate("batch_iv_analysis", "Settings"))
        self.menuFile.setTitle(_translate("batch_iv_analysis", "File"))
        self.menuTools.setTitle(_translate("batch_iv_analysis", "Tools"))
        self.tehDock.setWindowTitle(_translate("batch_iv_analysis", "Event Log"))
        self.actionQuit.setText(_translate("batch_iv_analysis", "Quit"))
        self.actionQuit.setShortcut(_translate("batch_iv_analysis", "Ctrl+Q"))
        self.actionOpen.setText(_translate("batch_iv_analysis", "Open"))
        self.actionOpen.setShortcut(_translate("batch_iv_analysis", "Ctrl+O"))
        self.actionSave.setText(_translate("batch_iv_analysis", "Export"))
        self.actionSave.setShortcut(_translate("batch_iv_analysis", "Ctrl+S"))
        self.actionClear_Table.setText(_translate("batch_iv_analysis", "Clear Table"))
        self.actionClear_Table.setShortcut(_translate("batch_iv_analysis", "Ctrl+Backspace"))
        self.actionFsadf.setText(_translate("batch_iv_analysis", "fsadf"))
        self.actionSet_Bounds.setText(_translate("batch_iv_analysis", "Set Bounds"))
        self.actionWatch.setText(_translate("batch_iv_analysis", "Watch"))
        self.actionWatch.setShortcut(_translate("batch_iv_analysis", "Ctrl+W"))
        self.actionEnable_Watching.setText(_translate("batch_iv_analysis", "Enable Watching"))
        self.actionEnable_Watching.setShortcut(_translate("batch_iv_analysis", "Ctrl+E"))
        self.actionWatch_2.setText(_translate("batch_iv_analysis", "Watch"))
        self.actionWatch_2.setShortcut(_translate("batch_iv_analysis", "Ctrl+W"))
        self.actionFit_Constraints.setText(_translate("batch_iv_analysis", "Fit Constraints"))

